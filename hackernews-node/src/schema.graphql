scalar DateTime

enum LinkOrderByInput {
    description_ASC
    description_DESC
    url_ASC
    url_DESC
    createdAt_ASC
    createdAt_DESC
}

type Query {
    info: String!
    feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
    link(id: ID!): Link
    user: [User!]!
}

type Feed {
    links: [Link!]!
    count: Int!
}

type Mutation {
    post(url: String!, description: String!): Link!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote
    updateLink(id: ID!, url: String, description: String): Link
    deleteLink(id: ID!): Link
}

type AuthPayload {
    token: String,
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}

type Link {
    id: ID!
    description: String!
    url: String!
    postedBy: User
    createdAt: DateTime!
    votes: [Vote!]!
}

type Subscription {
    newLink: Link
    newVote: Vote
}

type Vote {
    id: ID!
    link: Link!
    user: User!
}